import os
import cv2
import numpy as np
import tensorflow as tf

MODEL_PATH = "landmark_model.h5"
IMAGE_SIZE = (224, 224)
CAMERA_ID = 0

model = tf.keras.models.load_model(MODEL_PATH)

classes = sorted(os.listdir("landmark_dataset/train"))
class_indices = {i: classes[i] for i in range(len(classes))}

cap = cv2.VideoCapture(CAMERA_ID)
cap.set(cv2.CAP_PROP_FRAME_WIDTH, 640)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)

while True:
    ret, frame = cap.read()
    if not ret:
        break
    img = cv2.resize(frame, IMAGE_SIZE).astype(np.float32) / 255.0
    inp = np.expand_dims(img, axis=0)
    preds = model.predict(inp)
    idx = np.argmax(preds[0])
    label = f"{class_indices[idx]}: {preds[0][idx]*100:.1f}%"
    cv2.putText(frame, label, (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 0.8, (0,255,0), 2)
    cv2.imshow("Landmark Detection", frame)
    if cv2.waitKey(1) & 0xFF == ord("q"):
        break

cap.release()
cv2.destroyAllWindows()
